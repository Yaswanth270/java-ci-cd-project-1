def COLOR_MAP = [
    'SUCCESS': 'good',
    'FAILURE': 'danger'
]

pipeline {
    agent any
    environment {
        SCANNER_HOME = tool 'sonarqube'
    }
    stages {
        stage('Git Checkout') {
            steps {
                git 'https://github.com/Yaswanth270/java-ci-cd-project-1.git'
            }
        }
        stage('Compile') {
            steps {
                sh 'mvn compile'
            }
        }
        stage('Code Analysis') {
            steps {
                withSonarQubeEnv('sonarqube') {
                    sh '''$SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=java-ci-cd-project-1 \
                    -Dsonar.java.binaries=. \
                    -Dsonar.projectKey=java-ci-cd-project-1'''
                }
            }
        }
        stage('Package') {
            steps {
                sh 'mvn install'
            }
        }
        stage('Docker Build') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-push', toolName: 'docker') {
                        sh 'docker build -t spring-boot .'
                    }
                }
            }
        }
        stage('Docker Push') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-push', toolName: 'docker') {
                        sh 'docker tag spring-boot yaswanth270/spring-boot'
                        sh 'docker push yaswanth270/spring-boot'
                    }
                }
            }
        }
    }
    post {
        always {
            echo 'Slack Notification.'
            slackSend channel: '#devops-project',
            color: COLOR_MAP[currentBuild.currentResult],
            message: "*${currentBuild.currentResult}:* Job ${env.JOB_NAME} build ${env.BUILD_NUMBER} \n More info at: ${env.BUILD_URL}"
        }
    }
}
